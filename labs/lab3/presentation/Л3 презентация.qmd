---
# Preamble

## Author
author:
  name: Бызова Мария Олеговна
## Title
title: Отчет по лабораторной работе № 3
subtitle: Анализ трафика в Wireshark
license: CC BY
date: 2025-09-05

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: PT Serif 
romanfont: PT Serif 
sansfont: PT Sans 
monofont: PT Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

## Цель работы

Целью данной работы является изучение посредством Wireshark кадров Ethernet, анализ PDU протоколов транспортного и прикладного уровней стека TCP/IP.

## MAC-адресация

С помощью команды ipconfig выведем информацию о текущем сетевом соединении (рис. 1)

![Вывод информации о текущем сетевом соединении.](image/1.PNG){#fig-001 width=70%}

## MAC-адресация

Теперь используем разные опции команды (рис. 2 - 5)

## MAC-адресация

![Отображение полной конфигурации TCP/IP для всех адаптеров.](image/2.PNG){#fig-002 width=40%}

## MAC-адресация

![Отображение содержимого кэша сопоставителя DNS-клиента, включающее как записи, предварительно загруженные из локального файла Hosts, так и все недавно полученные записи ресурсов для запросов имен, разрешенных компьютером.](image/3.PNG){#fig-003 width=70%}

## MAC-адресация

![Инициализация динамической регистрации вручную для DNS-имен и IP-адресов, настроенных на компьютере](image/4.PNG){#fig-004 width=70%}

## MAC-адресация

![Отображение идентификатора класса DHCP для указанного адаптера.](image/5.PNG){#fig-005 width=70%}

## MAC-адресация

Определим MAC-адреса сетевых интерфейсов на нашем компьютере с помощью команды GETMAC (рис. 6)

![Определение MAC-адреса сетевых интерфейсов на нашем компьютере.](image/6.PNG){#fig-006 width=70%}

## Анализ кадров канального уровня в Wireshark

Установим на нашем устройстве Wireshark (рис. 7)

![Установка на нашем устройстве Wireshark.](image/7.PNG){#fig-007 width=70%}

## Анализ кадров канального уровня в Wireshark

Запустим Wireshark. Выберем активный на нашем устройстве сетевой интерфейс и убедимся, что начался процесс захвата трафика (рис. 8)

![Запуск Wireshark. Выбор активного сетевого интерфейса.](image/8.PNG){#fig-008 width=40%}

## Анализ кадров канального уровня в Wireshark

На нашем устройстве в консоли определим с помощью команды ipconfig IP-адрес устройства и шлюз по умолчанию (рис. 9)

![Определение IP-адреса устройства и шлюза по умолчанию.](image/9.PNG){#fig-009 width=70%}

## Анализ кадров канального уровня в Wireshark

На нашем устройстве в консоли с помощью команды ping пропингуем шлюз по умолчанию (рис. 10)

![Пинг шлюза по умолчанию.](image/10.PNG){#fig-010 width=40%}

## Анализ кадров канального уровня в Wireshark

В Wireshark остановим захват трафика. В строке фильтра пропишем фильтр arp or icmp и убедимся, что в списке пакетов отобразились только пакеты ARP или ICMP, в частности пакеты, которые были сгенерированы с помощью команды ping, отправленной с нашего устройства на шлюз по умолчанию (рис. 11)

## Анализ кадров канального уровня в Wireshark

![Остановка захвата трафика. Фильтр arp or icmp.](image/11.PNG){#fig-011 width=70%}

## Анализ кадров канального уровня в Wireshark

Изучим эхо-запрос и эхо-ответ ICMP в программе Wireshark (рис. 12 - 13)

## Анализ кадров канального уровня в Wireshark

![Кадр ICMP — эхо-запрос.](image/12.PNG){#fig-012 width=70%}

## Анализ кадров канального уровня в Wireshark

![Кадр ICMP — эхо-ответ.](image/13.PNG){#fig-013 width=70%}

## Анализ кадров канального уровня в Wireshark

Изучим кадры данных протокола ARP и данные в полях заголовка Ethernet II (рис. 14)

## Анализ кадров канального уровня в Wireshark

![Изучение кадров данных протокола ARP и данных в полях заголовка Ethernet II.](image/14.PNG){#fig-014 width=70%}

## Анализ кадров канального уровня в Wireshark

Начнём новый процесс захвата трафика в Wireshark. На нашем устройстве в консоли пропингуем по имени адрес ping vk.com (рис. 15)

![Пингуем по имени адрес vk.com.](image/15.PNG){#fig-015 width=40%}

## Анализ кадров канального уровня в Wireshark

В Wireshark остановим захват трафика. Изучим запросы и ответы протоколов ARP и ICMP (рис. 16 - 17)

## Анализ кадров канального уровня в Wireshark

![Кадр ICMP — эхо-запрос.](image/16.PNG){#fig-016 width=70%}

## Анализ кадров канального уровня в Wireshark

![Кадр ICMP — эхо-ответ.](image/17.PNG){#fig-017 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

Запустим Wireshark. Выберем активный на нашем устройстве сетевой интерфейс и убедимся, что начался процесс захвата трафика (рис. 18)

## Анализ протоколов транспортного уровня в Wireshark

![Запуск Wireshark. Выбор активного сетевого интерфейса.](image/18.PNG){#fig-018 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

На устройстве в браузере перейдём на сайт, работающий по протоколу HTTP (http://httpbin.org/) и поперемещаемся по ссылкам и разделам сайта в браузере (рис. 19)

![Открытие в браузере сайта](image/19.PNG){#fig-019 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра укажем http и проанализируем информацию по протоколу TCP в случае запросов и ответов (рис. 20 - 21)

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу TCP](image/20.PNG){#fig-020 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу TCP](image/21.PNG){#fig-021 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра укажем dns и проанализируем информацию по протоколу UDP в случае запросов и ответов (рис. 22 - 23)

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу UDP.](image/22.PNG){#fig-022 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу UDP.](image/23.PNG){#fig-023 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра укажем quic и проанализируем информацию по протоколу quic в случае запросов и ответов (рис. 24 - 25)

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу QUIC.](image/24.PNG){#fig-024 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

![Анализ информации по протоколу QUIC.](image/25.PNG){#fig-025 width=70%}

## Анализ handshake протокола TCP в Wireshark

Запустим Wireshark. Выберем активный на нашем устройстве сетевой интерфейс и убедимся, что начался процесс захвата трафика (рис. 26)

## Анализ handshake протокола TCP в Wireshark

![Запуск Wireshark. Выбор активного сетевого интерфейса.](image/26.PNG){#fig-026 width=70%}

## Анализ handshake протокола TCP в Wireshark

На устройстве используем соединение по HTTP с сайтом для захвата в Wireshark пакетов TCP (рис. 27)

![Использование соединения по HTTP с сайтом](image/27.PNG){#fig-027 width=70%}

## Анализ handshake протокола TCP в Wireshark

В Wireshark проанализируем handshake протокола TCP (рис. 28 - 30)

## Анализ handshake протокола TCP в Wireshark

![Анализ handshake протокола TCP.](image/28.PNG){#fig-028 width=70%}

## Анализ handshake протокола TCP в Wireshark

![Анализ handshake протокола TCP.](image/29.PNG){#fig-029 width=70%}

## Анализ handshake протокола TCP в Wireshark

![Анализ handshake протокола TCP.](image/30.PNG){#fig-030 width=70%}

## Анализ handshake протокола TCP в Wireshark

В Wireshark в меню «Статистика» выберем «График Потока» (рис. 31)

## Анализ handshake протокола TCP в Wireshark

![График потока.](image/31.PNG){#fig-031 width=70%}


## Выводы

В ходе выполнения лабораторной работы мы изучили посредством Wireshark кадров Ethernet, анализ PDU протоколов транспортного и прикладного уровней стека TCP/IP.
