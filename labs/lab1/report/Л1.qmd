---
## Author
author:
  name: Бызова Мария Олеговна
## Title
title: "Отчёт по лабораторной работе №1"
subtitle: "Сетевые технологии"
license: "CC BY"
---

# Цель работы

Целью данной работы является изучение методов кодирования и модуляции сигналов с помощью высокоуровнего языка программирования Octave. Определение спектра и параметров сигнала. Демонстрация принципов модуляции сигнала на примере аналоговой амплитудной модуляции. Исследование свойства самосинхронизации сигнала.

# Выполнение лабораторной работы

## Построение графиков в Octave

Запустим в нашей ОС Octave с оконным интерфейсом. Затем перейдём в окно редактора. Воспользовавшись комбинацией клавиш ctrl + n создадим новый сценарий. После чего сохраним его в наш рабочий каталог с именем plot_sin.m. В окне редактора повторим листинг по построению графика функции ([рис. @fig-001]).

![Запуск ОС Octave, открытие окна редактора, создание нового сценария с именем plot_sin.m, повтор листинга.](image/1.PNG){#fig-001 width=70%}

Запустим сценарий на выполнение, воспользовавшись клавишей F5. В качестве результата выполнения кода открылось окно с построенным графиком (также в рабочем каталоге появились файлы с графиками в форматах .eps, .png.) ([рис. @fig-002]).

![Запуск сценария на выполнение, открытие построенного графика.](image/2.PNG){#fig-002 width=70%}

Сохраним сценарий под другим названием (plot_sin_cos.m) и изменим его так, чтобы на одном графике располагались отличающиеся по типу линий графики функций ([рис. @fig-003]).

![Сохранение сценария под названием plot_sin_cos.m и изменение листинга.](image/3.PNG){#fig-003 width=70%}

## Разложение импульсного сигнала в частичный ряд Фурье

Создадим новый сценарий и сохраним его в наш рабочий каталог с именем meandr.m. В коде созданного сценария зададим начальные значения. Гармоники, образующие меандр, имеют амплитуду, обратно пропорциональную номеру соответствующей гармоники в спектре. Далее задаём массив значений гармоник, массив элементов ряда. Для построения в одном окне отдельных графиков меандра с различным количеством гармоник реализуем суммирование ряда с накоплением и воспользуемся функциями subplot и plot для построения графиков. Экспортируем полученный график в файл в формате .png ([рис. @fig-004]).

![Создание нового сценарий с именем meandr.m и написание листинга.](image/4.PNG){#fig-004 width=70%}

Скорректируем код для реализации меандра через синусы и получим соответствующие графики ([рис. @fig-005]).

![Корректировка кода для реализации меандра через синусы](image/5.PNG){#fig-005 width=70%}

Теперь запустим сценарий на выполнение и просмотрим построенный график ([рис. @fig-006]).

![Запуск сценария на выполнение, открытие построенного графика.](image/6.PNG){#fig-006 width=70%}

## Определение спектра и параметров сигнала

В нашем рабочем каталоге создадим каталог spectre1 и в нём новый сценарий с именем spectre.m ([рис. @fig-007]). В коде созданного сценария зададим начальные значения. Далее в коде зададим два синусоидальных сигнала разной частоты и выполним построение графиков сигналов ([рис. @fig-008]). Запустим сценарий на выполнение и откроем построенный график ([рис. @fig-009])

![Создание каталога spectre1 и в нём нового сценария с именем spectre.m.](image/7.PNG){#fig-007 width=70%}

![Написание кода.](image/8.PNG){#fig-008 width=70%}

![Запуск сценария на выполнение, открытие построенного графика.](image/9.PNG){#fig-009 width=70%}

С помощью быстрого преобразования Фурье найдём спектры сигналов, добавив в файл spectre.m нужный код. Учитывая реализацию преобразования Фурье, скорректируем график спектра (отбросим дублирующие отрицательные частоты, а также примем в расчёт то, что на каждом шаге вычисления быстрого преобразования Фурье происходит суммирование амплитуд сигналов) ([рис. @fig-010]).

![Нахождение спектров сигналов, запуск сценария на выполнение, открытие построенных графиков.](image/10.PNG){#fig-010 width=70%}

Найдём спектр суммы рассмотренных сигналов, создав каталог spectr_sum и файл в нём spectre_sum.m с нужным кодом. В результате получился аналогичный предыдущему результат, т.е. спектр суммы сигналов должен быть равен сумме спектров сигналов, что вытекает из свойств преобразования Фурье ([рис. @fig-011]).

![Запуск сценария на выполнение, открытие построенных графиков.](image/11.PNG){#fig-011 width=70%}

## Амплитудная модуляция

В нашем рабочем каталоге создадим каталог modulation и в нём новый сценарий с именем am.m. Добавим в файле am.m код. В результате получаем, что спектр произведения представляет собой свёртку спектров ([рис. @fig-012]).

![Запуск сценария на выполнение, открытие построенных графиков.](image/12.PNG){#fig-012 width=70%}

## Кодирование сигнала. Исследование свойства самосинхронизации сигнала

В нашем рабочем каталоге создадим каталог coding и в нём файлы main.m, maptowave.m, unipolar.m, ami.m, bipolarnrz.m, bipolarrz.m, manchester.m, diffmanc.m, calcspectre.m. 

В файле main.m подключим пакет signal и зададим входные кодовые последовательности. Затем в этом же файле пропишем вызовы функций для построения графиков модуляций кодированных сигналов для кодовой последовательности data. Далее в этом же файле пропишем вызовы функций для построения графиков модуляций кодированных сигналов для кодовой последовательности data_sync. Затем в этом же файле пропишем вызовы функций для построения графиков спектров. В файле maptowave.m пропишем функцию, которая по входному битовому потоку строит график сигнала. В файлах unipolar.m, ami.m, bipolarnrz.m, bipolarrz.m, manchester.m, diffmanc.m пропишем соответствующие функции преобразования кодовой последовательности data с вызовом функции maptowave для построения соответствующего графика. В файле calcspectre.m пропишем функцию построения спектра сигнала. Запустим главный скрипт main.m ([рис. @fig-013]).. В каталоге signal получены файлы с графиками кодированного сигнала, в каталоге sync — файлы с графиками, иллюстрирующими свойства самосинхронизации, в каталоге spectre — файлы с графиками спектров сигналов ([рис. @fig-014] - [рис. @fig-031]).

![Написание кода в файлах.](image/13.PNG){#fig-013 width=70%}

![Кодирование AMI.](image/14.PNG){#fig-014 width=70%}

![Кодирование NRZ.](image/15.PNG){#fig-015 width=70%}

![Кодирование RZ.](image/16.PNG){#fig-016 width=70%}

![Дифференциальное манчестерское кодирование.](image/17.PNG){#fig-017 width=70%}

![Манчестерское кодирование.](image/18.PNG){#fig-018 width=70%}

![Униполярное кодирование.](image/19.PNG){#fig-019 width=70%}

![Кодирование AMI: спектр сигнала.](image/20.PNG){#fig-020 width=70%}

![Кодирование NRZ: спектр сигнала.](image/21.PNG){#fig-021 width=70%}

![Кодирование RZ: спектр сигнала.](image/22.PNG){#fig-022 width=70%}

![Дифференциальное манчестерское кодирование: спектр сигнала.](image/23.PNG){#fig-023 width=70%}

![Манчестерское кодирование: спектр сигнала.](image/24.PNG){#fig-024 width=70%}

![Униполярное кодирование: спектр сигнала.](image/25.PNG){#fig-025 width=70%}

![Кодирование AMI: самосинхронизация при наличии сигнала.](image/26.PNG){#fig-026 width=70%}

![Кодирование NRZ: нет самосинхронизации.](image/27.PNG){#fig-027 width=70%}

![Кодирование RZ: есть самосинхронизация.](image/28.PNG){#fig-028 width=70%}

![Дифференциальное манчестерское кодирование: есть самосинхронизация.](image/29.PNG){#fig-029 width=70%}

![Манчестерское кодирование: есть самосинхронизация.](image/30.PNG){#fig-030 width=70%}

![Униполярное кодирование: нет самосинхронизации.](image/31.PNG){#fig-031 width=70%}

## Ответы на поставленные задачи

1. Выполнить задание с другой частотой дискретизации. Пояснить, что будет, если взять частоту дискретизации меньше 80 Гц? Уменьшение частоты дискретизации до значения менее 80 Гц может привести к искажениям и потере информации в спектральном анализе сигнала, особенно если сигнал содержит высокие частоты. ([рис. @fig-032]).

![Выполнение задания с другой частотой дискретизации.](image/32.PNG){#fig-032 width=70%}

# Выводы

В ходе выполнения лабораторной работы были получены знания по изучению методов кодирования и модуляции сигналов с помощью высокоуровнего языка программирования Octave. Научились определять спектры и параметры сигнала. Получили знания по демонстрации принципов модуляции сигнала на примере аналоговой амплитудной модуляции. А также исследовали свойства самосинхронизации сигнала.
